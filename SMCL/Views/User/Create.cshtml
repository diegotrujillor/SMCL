@model SMCLCore.Domain.Model.User

@{
    ViewBag.Title = "Usuarios - Crear nuevo registro";
}

<table id="no_css" width="100%">
    <tr>
        <td>
            <div class="titlejQGrid">Crear nuevo registro</div>
        </td>
        <td style="text-align: right;">
            <a href="~/../Index">
                <img src="@Url.Content("~/Content/Images/jnj_reports_go_back.png")" alt="regresar" title="Regresar" border="0" />
            </a>
            <span>&nbsp;Regresar...</span>
        </td>
    </tr>
</table>

<script src="@Url.Content("~/Scripts/jquery.passwordMeter.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <div style="color: #F00; text-decoration: blink;">
            @ViewData["ValidationErrorMessage"].ToString()
        </div>
        
        <legend>Usuarios</legend>

        <table id="no_css" width="95%">
            <tr>
                <td style="width: 25%;">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.DocumentId, "Nro. Documento (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.DocumentId, new { style = "width: 80%;", maxlength = 12 })
                    </div>
                </td>
                <td style="width: 25%;">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.LoginEmail, "Login (E-mail) (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.LoginEmail, new { style = "width: 80%;", maxlength = 25 })
                    </div>
                </td>
                <td style="width: 25%;">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.FirstName, "Primer Nombre (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.FirstName, new { style = "width: 80%;", maxlength = 50 })
                    </div>
                </td>
                <td style="width: 25%;" rowspan="2">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.Label("Roles (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.ListBox("RoleIds", ViewData["Roles"] as MultiSelectList, new { size = System.Configuration.ConfigurationManager.AppSettings["AmountOfRolesToShowInListBox"], style = "width: 80%;" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MiddleName, "Segundo Nombre")
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.MiddleName, new { style = "width: 80%;", maxlength = 50 })
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.LastName1, "Primer Apellido (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.LastName1, new { style = "width: 80%;", maxlength = 50 })
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.LastName2, "Segundo Apellido")
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.LastName2, new { style = "width: 80%;", maxlength = 50 })
                    </div>
                </td>
                
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumber, "Nro. Telefónico")
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PhoneNumber, new { style = "width: 80%;", maxlength = 50 })
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.Password, "Contraseña (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        <input id="passwordPwd" type="password" name="passwordPwd" onkeyup="chkPass(this.value);" title="@System.Configuration.ConfigurationManager.AppSettings["PasswordPolicies"]" style="width: 80%;" maxlength="80" />
                        <input id="minPasswordUpperCaseLetters" name="UC" type="hidden" value="0" />
                        <input id="minPasswordLowerCaseLetters" name="LC" type="hidden" value="0" />
                        <input id="minPasswordNumerics" name="NU" type="hidden" value="0" />
                        <input id="minPasswordSymbols" name="SY" type="hidden" value="0" />
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.Label("Pregunta clave (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("PassphraseId", ViewData["Passphrases"] as MultiSelectList, System.Configuration.ConfigurationManager.AppSettings["LabelPassphrase"], new { style = "width: 82%; font-size: small; font-family: Tahoma, Sans-Serif;" })
                    </div>
                </td>
                <td style="width: 25%;">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.Label("Respuesta secreta (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        <input id="passphraseValue" type="password" name="passphraseValue" placeholder='@System.Configuration.ConfigurationManager.AppSettings["PlaceholderPassphrase"]' onclick="changeInputType" onkeypress="resetInputType()" style="width: 80%;" maxlength="80" />
                    </div>
                </td>
            </tr>
        </table>
        <table id="no_css" cellpadding="0" cellspacing="0" width="95%">
            <tr>
                <td style="width: 25%;">
                    <div class="editor-label">
                        <div style="color: #F00;">
                            @Html.LabelFor(model => model.IsActive, "Activo? (*)")
                        </div>
                    </div>
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.IsActive)
                    </div>
                </td>
                <td style="width: 25%;">
                    <div id="complexity">Muy Corto</div>
                    <div id="scorebarBorder">
                        <div id="score">0%</div>
                        <div id="scorebar">&nbsp;</div>
                    </div>
                </td>
                <td>
                    <input type="submit" value="Crear" />
                    <label class="display-message">(*) Campos obligatorios</label>
                </td>
            </tr>
        </table>
    </fieldset>
}

<script type="text/javascript">
    function changeInputType() {
        document.getElementById("passphraseValue").type = 'password';
    }

    function resetInputType() {
        if (document.getElementById("passphraseValue").value != "") {
            document.getElementById("passphraseValue").type = 'password';
        } else {
            document.getElementById("passphraseValue").type = 'text';
            document.getElementById("passphraseValue").placeholder = '@System.Configuration.ConfigurationManager.AppSettings["PlaceholderPassphrase"]';
        }
    }
</script>